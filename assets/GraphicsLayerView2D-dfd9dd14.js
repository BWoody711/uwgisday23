import{C as a,D as o,V as g,k as m,e as s,q as p,t as c,v as l}from"./index-03fdaeda.js";import{m as n,u as d}from"./LayerView-c434c9ef.js";import{i as u}from"./GraphicContainer-8a342668.js";import{r as w}from"./GraphicsView2D-2d8ca63b.js";import"./scaleUtils-d588aa5f.js";import"./Container-bbd2f372.js";import"./definitions-bfe19d6a.js";import"./enums-bdecffa2.js";import"./Texture-f12783d4.js";import"./color-fcdea199.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-6bcc0dae.js";import"./FeatureContainer-0c1883dd.js";import"./AttributeStoreView-f16e4fdb.js";import"./TiledDisplayObject-ce6b20e6.js";import"./WGLContainer-ff13a58e.js";import"./FramebufferObject-beee1c8a.js";import"./ProgramTemplate-bcc3670f.js";import"./GeometryUtils-3f5786cb.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-06534eb9.js";import"./featureConversionUtils-69ed4e5d.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-bacca29b.js";import"./ExpandedCIM-70fd77b6.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-45c26196.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-574cccf5.js";import"./floatRGBA-f0635df4.js";import"./util-3a5192d7.js";import"./TileContainer-ca4bccda.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-602326c9.js";import"./projectionSupport-13d61316.js";import"./json-48e3ea08.js";import"./Matcher-1b2e50e4.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-9d94728c.js";import"./ComputedAttributeStorage-6e70baab.js";import"./TimeOnly-a97eea8f.js";let e=class extends n(d){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=a(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):g.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const h=t==null?void 0:t.filter(m);return h!=null&&h.length?(this._addHighlight(h),s(()=>this._removeHighlight(h))):s()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t);this._highlightIds.set(t,h+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t)-1;h===0?this._highlightIds.delete(t):this._highlightIds.set(t,h)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};p([c()],e.prototype,"graphicsView",void 0),e=p([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const oi=e;export{oi as default};
